/*
 * lcd_keypad.c
 *
 *  Created on: Feb 27, 2025
 *      Author: user
 */

#include "lcd_keypad.h"

#define LCD_RS GPIOA, GPIO_PIN_9
#define LCD_EN GPIOC, GPIO_PIN_7
#define LCD_D4 GPIOB, GPIO_PIN_5
#define LCD_D5 GPIOB, GPIO_PIN_4
#define LCD_D6 GPIOB, GPIO_PIN_10
#define LCD_D7 GPIOA, GPIO_PIN_8

void LCD_Enable() {
    HAL_GPIO_WritePin(LCD_EN, GPIO_PIN_SET);
    DelayUS(10);
    HAL_GPIO_WritePin(LCD_EN, GPIO_PIN_RESET);
    DelayUS(10);
}

void LCD_Send4Bit(uint8_t data) {
    HAL_GPIO_WritePin(LCD_D4, (data & 0x01) ? GPIO_PIN_SET : GPIO_PIN_RESET);
    HAL_GPIO_WritePin(LCD_D5, (data & 0x02) ? GPIO_PIN_SET : GPIO_PIN_RESET);
    HAL_GPIO_WritePin(LCD_D6, (data & 0x04) ? GPIO_PIN_SET : GPIO_PIN_RESET);
    HAL_GPIO_WritePin(LCD_D7, (data & 0x08) ? GPIO_PIN_SET : GPIO_PIN_RESET);
    LCD_Enable();
}

void LCD_SendCommand(uint8_t cmd) {
    HAL_GPIO_WritePin(LCD_RS, GPIO_PIN_RESET);
    LCD_Send4Bit(cmd >> 4);
    LCD_Send4Bit(cmd & 0x0F);
}

void LCD_SendData(uint8_t data) {
    HAL_GPIO_WritePin(LCD_RS, GPIO_PIN_SET);
    LCD_Send4Bit(data >> 4);
    LCD_Send4Bit(data & 0x0F);
}

void LCD_Init() {
    //HAL_Delay(50);
    LCD_SendCommand(0x28); // 4비트 모드, 2라인, 5x8 폰트
    LCD_SendCommand(0x0C); // 디스플레이 ON, 커서 OFF
    LCD_SendCommand(0x06); // 자동 이동, 오른쪽으로 이동
    LCD_SendCommand(0x01); // 화면 클리어
    HAL_Delay(5);
}

void LCD_SetCursor(uint8_t row, uint8_t col) {
    uint8_t pos = (row == 0) ? 0x80 + col : 0xC0 + col;
    LCD_SendCommand(pos);
}


void LCD_Print(char* str) {
    while (*str) {
        LCD_SendData(*str++);
    }
}

static char lcd_line1[32];
static char lcd_line2[32];




// **ADC 버튼 읽기**
uint16_t Read_ADC(void) {
    HAL_ADC_Start(&hadc1);
    HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
    return HAL_ADC_GetValue(&hadc1);
}


static uint8_t ReadKeypad()
{
	uint16_t adc = Read_ADC();
	if (adc < 100) return BTN_RIGHT;
	else if(adc < 200) return BTN_UP;
	else if (adc < 400) return BTN_DOWN;
	else if (adc < 600) return BTN_LEFT;
	else if (adc < 800) return BTN_SEL;
	else return 0;
}


void InitLcdKeypadWork()
{
	LCD_Init();
	LCD_SetCursor(0, 0);
	LCD_Print("1234");
}


static uint32_t tm_read_button;
static uint8_t btn_prev;

void DoLcdKeypadWork()
{
	if (GetElapsedTick(tm_read_button) > 100)
	{
		tm_read_button = HAL_GetTick();

		uint8_t btn = ReadKeypad();
		if (btn != btn_prev)
		{
			btn_prev = btn;

			char msg[32] = {0,};
			if (btn == BTN_LEFT) sprintf(msg, "LEFT");
			else if (btn == BTN_RIGHT) sprintf(msg, "RIGHT");
			else if (btn == BTN_UP) sprintf(msg, "UP");
			else if (btn == BTN_DOWN) sprintf(msg, "DOWN");
			else if (btn == BTN_SEL) sprintf(msg, "SELECT");

			LCD_Init();
			LCD_Print(msg);
		}
	}
}

